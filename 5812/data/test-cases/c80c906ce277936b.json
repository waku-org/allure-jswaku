{"uid":"c80c906ce277936b","name":"should throw an error when the selected peer does not register the required protocols","fullName":"/tests/utils.spec.ts: selectPeerForProtocol > should throw an error when the selected peer does not register the required protocols","historyId":"b220b964ff2a335300b71843add52246:d41d8cd98f00b204e9800998ecf8427e","time":{"start":1699977502752,"stop":1699977502753,"duration":1},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"\"before each\" hook in \"selectPeerForProtocol\"","time":{},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"\"before each\" hook in \"selectPeerForProtocol\"","time":{},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"\"before each\" hook in \"selectPeerForProtocol\"","time":{},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"\"before each\" hook in \"selectPeerForProtocol\"","time":{},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"\"before each\" hook in \"selectPeerForProtocol\"","time":{},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"afterStages":[{"name":"\"after each\" hook in \"selectPeerForProtocol\"","time":{},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"\"after each\" hook in \"selectPeerForProtocol\"","time":{},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"\"after each\" hook in \"selectPeerForProtocol\"","time":{},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"\"after each\" hook in \"selectPeerForProtocol\"","time":{},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0},{"name":"\"after each\" hook in \"selectPeerForProtocol\"","time":{},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0}],"labels":[{"name":"package","value":"tests"},{"name":"parentSuite","value":"selectPeerForProtocol"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":[]},"source":"c80c906ce277936b.json","parameterValues":[]}