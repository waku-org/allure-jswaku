{"uid":"eb543a381635ac30","name":"should return a random peer when all peers have the same latency","fullName":"/tests/utils.spec.ts: selectPeerForProtocol > should return a random peer when all peers have the same latency","historyId":"635fb0e4575d7e6383bacd76632dad54:d41d8cd98f00b204e9800998ecf8427e","time":{"start":1697713408067,"stop":1697713408067,"duration":0},"status":"passed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"\"before each\" hook in \"selectPeerForProtocol\"","time":{},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"\"before each\" hook in \"selectPeerForProtocol\"","time":{},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"\"before each\" hook in \"selectPeerForProtocol\"","time":{},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"\"before each\" hook in \"selectPeerForProtocol\"","time":{},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"\"before each\" hook in \"selectPeerForProtocol\"","time":{},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"afterStages":[{"name":"\"after each\" hook in \"selectPeerForProtocol\"","time":{},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"\"after each\" hook in \"selectPeerForProtocol\"","time":{},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"\"after each\" hook in \"selectPeerForProtocol\"","time":{},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"\"after each\" hook in \"selectPeerForProtocol\"","time":{},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"\"after each\" hook in \"selectPeerForProtocol\"","time":{},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"package","value":"tests"},{"name":"parentSuite","value":"selectPeerForProtocol"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":[]},"source":"eb543a381635ac30.json","parameterValues":[]}